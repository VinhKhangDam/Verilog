$date
	Thu Mar  6 17:12:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fa_4bit_tb $end
$var wire 4 ! sum4 [3:0] $end
$var wire 1 " cout4 $end
$var reg 1 # cin4 $end
$var reg 4 $ s1 [3:0] $end
$var reg 4 % s2 [3:0] $end
$scope module fa4 $end
$var wire 1 # cin4 $end
$var wire 4 & s1 [3:0] $end
$var wire 4 ' s2 [3:0] $end
$var wire 1 ( w3 $end
$var wire 1 ) w2 $end
$var wire 1 * w1 $end
$var wire 4 + sum4 [3:0] $end
$var wire 1 " cout4 $end
$scope module fa1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 # cin $end
$var wire 1 * cout $end
$var wire 1 . sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 1 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ( cin $end
$var wire 1 " cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
07
16
15
14
03
12
11
00
1/
1.
0-
1,
b111 +
0*
0)
0(
b1000 '
b1111 &
b1000 %
b1111 $
0#
1"
b111 !
$end
#10
17
1(
04
1)
01
1*
b1000 !
b1000 +
0.
1#
#20
0"
0(
14
0)
11
17
0*
b1111 !
b1111 +
1.
1-
10
13
06
0,
0/
02
0#
b111 %
b111 '
b1000 $
b1000 &
#30
1"
07
1(
04
1)
01
1*
b0 !
b0 +
0.
1#
#40
